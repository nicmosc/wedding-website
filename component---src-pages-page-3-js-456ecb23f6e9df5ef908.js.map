{"version":3,"sources":["webpack:///./src/components/_old/seo.js","webpack:///./src/pages/page-3.js","webpack:///./src/components/_old/header.js","webpack:///./src/components/_old/layout.js"],"names":["SEO","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","IndexPage","transitionCover","useRef","layoutContents","ref","style","maxWidth","marginBottom","exit","length","trigger","direction","directionTo","directionFrom","seconds","TimelineMax","set","current","y","to","ease","Power1","easeInOut","opacity","easeIn","entry","delay","cover","bg","position","background","top","left","width","height","transform","Header","siteTitle","margin","padding","color","textDecoration","Layout","children","data","paddingTop","Date","getFullYear","href"],"mappings":"2FAAA,2DAYA,SAASA,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC9BC,EAASC,yBAAe,YAAxBD,KAcFE,EAAkBN,GAAeI,EAAKG,aAAaP,YAEzD,OACE,YAAC,IAAD,CACEQ,eAAgB,CACdP,QAEFE,MAAOA,EACPM,cAAa,QAAUL,EAAKG,aAAaJ,MACzCD,KAAM,CACJ,CACEQ,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASR,GAEX,CACES,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASP,EAAKG,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAASR,GAEX,CACEO,KAAK,sBACLC,QAASL,IAEXQ,OAAOZ,KAKfH,EAAIgB,aAAe,CACjBd,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD,O,kCCvFf,iHA2EeiB,UAlEG,WAChB,IAAMC,EAAkBC,mBAClBC,EAAiBD,mBAsBvB,OACE,mBAAKE,IAAKD,GACR,YAAC,IAAD,KACE,YAAC,IAAD,CAAKhB,MAAM,SACX,mCACA,yDACA,sDACA,mBAAKkB,MAAO,CAAEC,SAAS,QAAUC,aAAa,aAC9C,YAAC,IAAD,CACEC,KAAM,CACJC,OAAQ,IACRC,QAAS,gBA/BoBC,EAC/BC,EACAC,EAGAC,EA0BcN,EAAH,EAAGA,KAAH,OA9BXI,EAA4B,QADGD,EA+BkB,MA9Bd,QAAU,OAC7CE,EAA8B,OAAdF,EAAqB,OAAS,QAG9CG,EA0B2CN,EA/BtBC,QAOpB,IAAIM,KACRC,IAAIf,EAAgBgB,QAAS,CAAEC,EAAGL,IAClCM,GAAGlB,EAAgBgB,QAASH,EAAU,EAAG,CACxCI,EAAG,KACHE,KAAMC,IAAOC,YAEdN,IAAIb,EAAec,QAAS,CAAEM,QAAS,IACvCJ,GAAGlB,EAAgBgB,QAASH,EAAU,EAAG,CACxCI,EAAGN,EACHQ,KAAMC,IAAOG,WAiBXC,MAAO,CACLC,MAAO,IAETP,GAAG,YARL,gBAWA,uBACA,YAAC,IAAD,CAASQ,OAAK,EAACR,GAAG,UAAUR,UAAU,QAAQiB,GAAG,WAAjD,mCAGA,YAAC,mBAAD,KACE,mBACExB,IAAKH,EACLI,MAAO,CACLwB,SAAU,QACVC,WAAY,UACZC,IAAK,EACLC,KAAM,EACNC,MAAO,QACPC,OAAQ,QACRC,UAAW,2B,mFC9DnBC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,sBACEhC,MAAO,CACLyB,WAAW,gBACXvB,aAAa,YAGf,mBACEF,MAAO,CACLiC,OAAO,SACPhC,SAAU,IACViC,QAAQ,sBAGV,kBAAIlC,MAAO,CAAEiC,OAAQ,IACnB,YAAC,OAAD,CACEnB,GAAG,IACHd,MAAO,CACLmC,MAAM,QACNC,eAAe,SAGhBJ,OAWXD,EAAOrC,aAAe,CACpBsC,UAAU,IAGGD,QCUAM,IApCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAOvD,yBAAe,cAU5B,OACE,8BACE,YAAC,EAAD,CAAQgD,UAAWO,EAAKxD,KAAKG,aAAaJ,QAC1C,mBACEkB,MAAO,CACLiC,OAAO,SACPhC,SAAU,IACViC,QAAQ,wBACRM,WAAY,IAEd,wBAAOF,GACP,gCACK,IAAIG,MAAOC,cADhB,mBAGE,iBAAGC,KAAK,4BAAR","file":"component---src-pages-page-3-js-456ecb23f6e9df5ef908.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","// import { Link } from \"gatsby\"\nimport Link, { TransitionPortal } from 'gatsby-plugin-transition-link';\nimport AniLink from 'gatsby-plugin-transition-link/AniLink';\nimport { Power1, TimelineMax } from 'gsap';\nimport React, { useRef } from 'react';\n\nimport Layout from '../components/_old/layout';\nimport SEO from '../components/_old/seo';\n\nconst IndexPage = () => {\n  const transitionCover = useRef();\n  const layoutContents = useRef();\n\n  const verticalAnimation = ({ length }, direction) => {\n    const directionTo = direction === 'up' ? '-100%' : '100%';\n    const directionFrom = direction === 'up' ? '100%' : '-100%';\n\n    // convert ms to s for gsap\n    const seconds = length;\n\n    return new TimelineMax()\n      .set(transitionCover.current, { y: directionFrom })\n      .to(transitionCover.current, seconds / 2, {\n        y: '0%',\n        ease: Power1.easeInOut,\n      })\n      .set(layoutContents.current, { opacity: 0 })\n      .to(transitionCover.current, seconds / 2, {\n        y: directionTo,\n        ease: Power1.easeIn,\n      });\n  };\n\n  return (\n    <div ref={layoutContents}>\n      <Layout>\n        <SEO title=\"Home\" />\n        <h1>Hi people</h1>\n        <p>Welcome to your new Gatsby site.</p>\n        <p>Now go build something great.</p>\n        <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>{/* <Image /> */}</div>\n        <Link\n          exit={{\n            length: 1.2,\n            trigger: ({ exit }) => verticalAnimation(exit, 'up'),\n          }}\n          entry={{\n            delay: 0.5,\n          }}\n          to=\"/page-2/\">\n          Go to page 2\n        </Link>\n        <br />\n        <AniLink cover to=\"/page-2\" direction=\"right\" bg=\"#ff0000\">\n          Go to page 2 with a cover right\n        </AniLink>\n        <TransitionPortal>\n          <div\n            ref={transitionCover}\n            style={{\n              position: 'fixed',\n              background: '#4b2571',\n              top: 0,\n              left: 0,\n              width: '100vw',\n              height: '100vh',\n              transform: 'translateY(100%)',\n            }}\n          />\n        </TransitionPortal>\n      </Layout>\n    </div>\n  );\n};\n\nexport default IndexPage;\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\n// import './layout.css';\n\nimport { graphql, useStaticQuery } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Header from './header';\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}>\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}